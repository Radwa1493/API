{
    "sourceFile": "jest.config.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1686323165032,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1686323244548,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,5 +5,6 @@\n       [\"./node_modules/jest-html-reporters\", {\r\n         pageTitle: \"Test Report\"\r\n       }]\r\n     ]\r\n+    \r\n   };\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686323293898,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,143 @@\n+// For a detailed explanation regarding each configuration property, visit:\r\n+// https://jestjs.io/docs/en/configuration.html\r\n+\r\n module.exports = {\r\n-    // ... other Jest configuration options ...\r\n-    reporters: [\r\n-      \"default\",\r\n-      [\"./node_modules/jest-html-reporters\", {\r\n-        pageTitle: \"Test Report\"\r\n-      }]\r\n\\ No newline at end of file\n-    ]\r\n-    \r\n-  };\n+\t\"testTimeout\": 100000,\r\n+\r\n+\t// All imported modules in your tests should be mocked automatically\r\n+\t// automock: false,\r\n+\t// Stop running tests after `n` failures\r\n+\t// bail: 0,\r\n+\tbail: 0,\r\n+\t// The directory where Jest should store its cached dependency information\r\n+\t// cacheDirectory: \"/private/var/folders/lg/6rs1p2fd2ml9b9nhtmd1sb6w0000gn/T/jest_dx\",\r\n+\t// Automatically clear mock calls and instances between every test\r\n+\t// clearMocks: false,\r\n+\t// Indicates whether the coverage information should be collected while executing the test\r\n+\t// collectCoverage: false,\r\n+\t// An array of glob patterns indicating a set of files for which coverage information should be collected\r\n+\t// collectCoverageFrom: undefined,\r\n+\t// The directory where Jest should output its coverage files\r\n+\t// coverageDirectory: undefined,\r\n+\t// An array of regexp pattern strings used to skip coverage collection\r\n+\t// coveragePathIgnorePatterns: [\r\n+\t//   \"/node_modules/\"\r\n+\t// ],\r\n+\t// Indicates which provider should be used to instrument code for coverage\r\n+\t// coverageProvider: \"babel\",\r\n+\t// A list of reporter names that Jest uses when writing coverage reports\r\n+\t// coverageReporters: [\r\n+\t//   \"json\",\r\n+\t//   \"text\",\r\n+\t//   \"lcov\",\r\n+\t//   \"clover\"\r\n+\t// ],\r\n+\t// An object that configures minimum threshold enforcement for coverage results\r\n+\t// coverageThreshold: undefined,\r\n+\t// A path to a custom dependency extractor\r\n+\t// dependencyExtractor: undefined,\r\n+\t// Make calling deprecated APIs throw helpful error messages\r\n+\t// errorOnDeprecated: false,\r\n+\t// Force coverage collection from ignored files using an array of glob patterns\r\n+\t// forceCoverageMatch: [],\r\n+\t// A path to a module which exports an async function that is triggered once before all test suites\r\n+\t// globalSetup: undefined,\r\n+\t// A path to a module which exports an async function that is triggered once after all test suites\r\n+\t// globalTeardown: undefined,\r\n+\t// A set of global variables that need to be available in all test environments\r\n+\t// globals: {},\r\n+\t// The maximum amount of workers used to run your tests. Can be specified as % or a number. E.g. maxWorkers: 10% will use 10% of your CPU amount + 1 as the maximum worker number. maxWorkers: 2 will use a maximum of 2 workers.\r\n+\t// maxWorkers: \"50%\",\r\n+\t// An array of directory names to be searched recursively up from the requiring module's location\r\n+\t// moduleDirectories: [\r\n+\t//   \"node_modules\"\r\n+\t// ],\r\n+\t// An array of file extensions your modules use\r\n+\t// moduleFileExtensions: [\r\n+\t//   \"js\",\r\n+\t//   \"json\",\r\n+\t//   \"jsx\",\r\n+\t//   \"ts\",\r\n+\t//   \"tsx\",\r\n+\t//   \"node\"\r\n+\t// ],\r\n+\t// A map from regular expressions to module names or to arrays of module names that allow to stub out resources with a single module\r\n+\t// moduleNameMapper: {},\r\n+\t// An array of regexp pattern strings, matched against all module paths before considered 'visible' to the module loader\r\n+\t// modulePathIgnorePatterns: [],\r\n+\t// Activates notifications for test results\r\n+\t// notify: false,\r\n+\t// An enum that specifies notification mode. Requires { notify: true }\r\n+\t// notifyMode: \"failure-change\",\r\n+\t// A preset that is used as a base for Jest's configuration\r\n+\t// preset: undefined,\r\n+\tpreset: 'jest-puppeteer',\r\n+\t// Run tests from one or more projects\r\n+\t// projects: undefined,\r\n+\t// Use this configuration option to add custom reporters to Jest\r\n+\t// reporters: undefined,\r\n+\t// Automatically reset mock state between every test\r\n+\t// resetMocks: false,\r\n+\t// Reset the module registry before running each individual test\r\n+\t// resetModules: false,\r\n+\t// A path to a custom resolver\r\n+\t// resolver: undefined,\r\n+\t// Automatically restore mock state between every test\r\n+\t// restoreMocks: false,\r\n+\t// The root directory that Jest should scan for tests and modules within\r\n+\t// rootDir: undefined,\r\n+\t// A list of paths to directories that Jest should use to search for files in\r\n+\t// roots: [\r\n+\t//   \"<rootDir>\"\r\n+\t// ],\r\n+\t// Allows you to use a custom runner instead of Jest's default test runner\r\n+\t// runner: \"jest-runner\",\r\n+\t// The paths to modules that run some code to configure or set up the testing environment before each test\r\n+\t// setupFiles: [],\r\n+\t// A list of paths to modules that run some code to configure or set up the testing framework before each test\r\n+\t// setupFilesAfterEnv: [],\r\n+\t// The number of seconds after which a test is considered as slow and reported as such in the results.\r\n+\t// slowTestThreshold: 5,\r\n+\t// A list of paths to snapshot serializer modules Jest should use for snapshot testing\r\n+\t// snapshotSerializers: [],\r\n+\t// The test environment that will be used for testing\r\n+\t// testEnvironment: \"node\",\r\n+\t// Options that will be passed to the testEnvironment\r\n+\t// testEnvironmentOptions: {},\r\n+\t// Adds a location field to test results\r\n+\t// testLocationInResults: false,\r\n+\t// The glob patterns Jest uses to detect test files\r\n+\t// testMatch: [\r\n+\t//   \"**/__tests__/**/*.[jt]s?(x)\",\r\n+\t//   \"**/?(*.)+(spec|test).[tj]s?(x)\"\r\n+\t// ],\r\n+\t// An array of regexp pattern strings that are matched against all test paths, matched tests are skipped\r\n+\t// testPathIgnorePatterns: [\r\n+\t//   \"/node_modules/\"\r\n+\t// ],\r\n+\t// The regexp pattern or array of patterns that Jest uses to detect test files\r\n+\t// testRegex: [],\r\n+\t// This option allows the use of a custom results processor\r\n+\t// testResultsProcessor: undefined,\r\n+\t// This option allows use of a custom test runner\r\n+\t// testRunner: \"jasmine2\",\r\n+\t// This option sets the URL for the jsdom environment. It is reflected in properties such as location.href\r\n+\t// testURL: \"http://localhost\",\r\n+\t// Setting this value to \"fake\" allows the use of fake timers for functions such as \"setTimeout\"\r\n+\t// timers: \"real\",\r\n+\t// A map from regular expressions to paths to transformers\r\n+\t// transform: undefined,\r\n+\t// An array of regexp pattern strings that are matched against all source file paths, matched files will skip transformation\r\n+\t// transformIgnorePatterns: [\r\n+\t//   \"/node_modules/\",\r\n+\t//   \"\\\\.pnp\\\\.[^\\\\/]+$\"\r\n+\t// ],\r\n+\t// An array of regexp pattern strings that are matched against all modules before the module loader will automatically return a mock for them\r\n+\t// unmockedModulePathPatterns: undefined,\r\n+\t// Indicates whether each individual test should be reported during the run\r\n+\t// verbose: undefined,\r\n+\t// An array of regexp patterns that are matched against all source file paths before re-running tests in watch mode\r\n+\t// watchPathIgnorePatterns: [],\r\n+\t// Whether to use watchman for file crawling\r\n+\t// watchman: true,\r\n+}\r\n"
                },
                {
                    "date": 1686323333926,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,15 @@\n // https://jestjs.io/docs/en/configuration.html\r\n \r\n module.exports = {\r\n \t\"testTimeout\": 100000,\r\n-\r\n+  // ... other Jest configuration options ...\r\n+  reporters: [\r\n+    \"default\",\r\n+    [\"./node_modules/jest-html-reporters\", {\r\n+      pageTitle: \"Test Report\"\r\n+    }]\r\n+  ]\r\n \t// All imported modules in your tests should be mocked automatically\r\n \t// automock: false,\r\n \t// Stop running tests after `n` failures\r\n \t// bail: 0,\r\n"
                },
                {
                    "date": 1686323591614,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,149 +1,20 @@\n-// For a detailed explanation regarding each configuration property, visit:\r\n-// https://jestjs.io/docs/en/configuration.html\r\n-\r\n module.exports = {\r\n-\t\"testTimeout\": 100000,\r\n-  // ... other Jest configuration options ...\r\n-  reporters: [\r\n-    \"default\",\r\n-    [\"./node_modules/jest-html-reporters\", {\r\n-      pageTitle: \"Test Report\"\r\n-    }]\r\n-  ]\r\n-\t// All imported modules in your tests should be mocked automatically\r\n-\t// automock: false,\r\n-\t// Stop running tests after `n` failures\r\n-\t// bail: 0,\r\n-\tbail: 0,\r\n-\t// The directory where Jest should store its cached dependency information\r\n-\t// cacheDirectory: \"/private/var/folders/lg/6rs1p2fd2ml9b9nhtmd1sb6w0000gn/T/jest_dx\",\r\n-\t// Automatically clear mock calls and instances between every test\r\n-\t// clearMocks: false,\r\n-\t// Indicates whether the coverage information should be collected while executing the test\r\n-\t// collectCoverage: false,\r\n-\t// An array of glob patterns indicating a set of files for which coverage information should be collected\r\n-\t// collectCoverageFrom: undefined,\r\n-\t// The directory where Jest should output its coverage files\r\n-\t// coverageDirectory: undefined,\r\n-\t// An array of regexp pattern strings used to skip coverage collection\r\n-\t// coveragePathIgnorePatterns: [\r\n-\t//   \"/node_modules/\"\r\n-\t// ],\r\n-\t// Indicates which provider should be used to instrument code for coverage\r\n-\t// coverageProvider: \"babel\",\r\n-\t// A list of reporter names that Jest uses when writing coverage reports\r\n-\t// coverageReporters: [\r\n-\t//   \"json\",\r\n-\t//   \"text\",\r\n-\t//   \"lcov\",\r\n-\t//   \"clover\"\r\n-\t// ],\r\n-\t// An object that configures minimum threshold enforcement for coverage results\r\n-\t// coverageThreshold: undefined,\r\n-\t// A path to a custom dependency extractor\r\n-\t// dependencyExtractor: undefined,\r\n-\t// Make calling deprecated APIs throw helpful error messages\r\n-\t// errorOnDeprecated: false,\r\n-\t// Force coverage collection from ignored files using an array of glob patterns\r\n-\t// forceCoverageMatch: [],\r\n-\t// A path to a module which exports an async function that is triggered once before all test suites\r\n-\t// globalSetup: undefined,\r\n-\t// A path to a module which exports an async function that is triggered once after all test suites\r\n-\t// globalTeardown: undefined,\r\n-\t// A set of global variables that need to be available in all test environments\r\n-\t// globals: {},\r\n-\t// The maximum amount of workers used to run your tests. Can be specified as % or a number. E.g. maxWorkers: 10% will use 10% of your CPU amount + 1 as the maximum worker number. maxWorkers: 2 will use a maximum of 2 workers.\r\n-\t// maxWorkers: \"50%\",\r\n-\t// An array of directory names to be searched recursively up from the requiring module's location\r\n-\t// moduleDirectories: [\r\n-\t//   \"node_modules\"\r\n-\t// ],\r\n-\t// An array of file extensions your modules use\r\n-\t// moduleFileExtensions: [\r\n-\t//   \"js\",\r\n-\t//   \"json\",\r\n-\t//   \"jsx\",\r\n-\t//   \"ts\",\r\n-\t//   \"tsx\",\r\n-\t//   \"node\"\r\n-\t// ],\r\n-\t// A map from regular expressions to module names or to arrays of module names that allow to stub out resources with a single module\r\n-\t// moduleNameMapper: {},\r\n-\t// An array of regexp pattern strings, matched against all module paths before considered 'visible' to the module loader\r\n-\t// modulePathIgnorePatterns: [],\r\n-\t// Activates notifications for test results\r\n-\t// notify: false,\r\n-\t// An enum that specifies notification mode. Requires { notify: true }\r\n-\t// notifyMode: \"failure-change\",\r\n-\t// A preset that is used as a base for Jest's configuration\r\n-\t// preset: undefined,\r\n-\tpreset: 'jest-puppeteer',\r\n-\t// Run tests from one or more projects\r\n-\t// projects: undefined,\r\n-\t// Use this configuration option to add custom reporters to Jest\r\n-\t// reporters: undefined,\r\n-\t// Automatically reset mock state between every test\r\n-\t// resetMocks: false,\r\n-\t// Reset the module registry before running each individual test\r\n-\t// resetModules: false,\r\n-\t// A path to a custom resolver\r\n-\t// resolver: undefined,\r\n-\t// Automatically restore mock state between every test\r\n-\t// restoreMocks: false,\r\n-\t// The root directory that Jest should scan for tests and modules within\r\n-\t// rootDir: undefined,\r\n-\t// A list of paths to directories that Jest should use to search for files in\r\n-\t// roots: [\r\n-\t//   \"<rootDir>\"\r\n-\t// ],\r\n-\t// Allows you to use a custom runner instead of Jest's default test runner\r\n-\t// runner: \"jest-runner\",\r\n-\t// The paths to modules that run some code to configure or set up the testing environment before each test\r\n-\t// setupFiles: [],\r\n-\t// A list of paths to modules that run some code to configure or set up the testing framework before each test\r\n-\t// setupFilesAfterEnv: [],\r\n-\t// The number of seconds after which a test is considered as slow and reported as such in the results.\r\n-\t// slowTestThreshold: 5,\r\n-\t// A list of paths to snapshot serializer modules Jest should use for snapshot testing\r\n-\t// snapshotSerializers: [],\r\n-\t// The test environment that will be used for testing\r\n-\t// testEnvironment: \"node\",\r\n-\t// Options that will be passed to the testEnvironment\r\n-\t// testEnvironmentOptions: {},\r\n-\t// Adds a location field to test results\r\n-\t// testLocationInResults: false,\r\n-\t// The glob patterns Jest uses to detect test files\r\n-\t// testMatch: [\r\n-\t//   \"**/__tests__/**/*.[jt]s?(x)\",\r\n-\t//   \"**/?(*.)+(spec|test).[tj]s?(x)\"\r\n-\t// ],\r\n-\t// An array of regexp pattern strings that are matched against all test paths, matched tests are skipped\r\n-\t// testPathIgnorePatterns: [\r\n-\t//   \"/node_modules/\"\r\n-\t// ],\r\n-\t// The regexp pattern or array of patterns that Jest uses to detect test files\r\n-\t// testRegex: [],\r\n-\t// This option allows the use of a custom results processor\r\n-\t// testResultsProcessor: undefined,\r\n-\t// This option allows use of a custom test runner\r\n-\t// testRunner: \"jasmine2\",\r\n-\t// This option sets the URL for the jsdom environment. It is reflected in properties such as location.href\r\n-\t// testURL: \"http://localhost\",\r\n-\t// Setting this value to \"fake\" allows the use of fake timers for functions such as \"setTimeout\"\r\n-\t// timers: \"real\",\r\n-\t// A map from regular expressions to paths to transformers\r\n-\t// transform: undefined,\r\n-\t// An array of regexp pattern strings that are matched against all source file paths, matched files will skip transformation\r\n-\t// transformIgnorePatterns: [\r\n-\t//   \"/node_modules/\",\r\n-\t//   \"\\\\.pnp\\\\.[^\\\\/]+$\"\r\n-\t// ],\r\n-\t// An array of regexp pattern strings that are matched against all modules before the module loader will automatically return a mock for them\r\n-\t// unmockedModulePathPatterns: undefined,\r\n-\t// Indicates whether each individual test should be reported during the run\r\n-\t// verbose: undefined,\r\n-\t// An array of regexp patterns that are matched against all source file paths before re-running tests in watch mode\r\n-\t// watchPathIgnorePatterns: [],\r\n-\t// Whether to use watchman for file crawling\r\n-\t// watchman: true,\r\n-}\r\n+    // other Jest configuration options...\r\n+    coverageReporters: ['json', 'lcov', 'text', 'html'],\r\n+    coverageDirectory: '<rootDir>/coverage',\r\n+    reporters: [\r\n+      'default',\r\n+      [\r\n+        'istanbul',\r\n+        {\r\n+          reports: ['lcov', 'text-summary'],\r\n+        },\r\n+      ],\r\n+    ],\r\n+    collectCoverageFrom: [\r\n+      'src/**/*.{js,jsx}',\r\n+      '!src/index.{js,jsx}',\r\n+      '!**/node_modules/**',\r\n+    ],\r\n+  };\r\n+  \n\\ No newline at end of file\n"
                },
                {
                    "date": 1686324317453,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,20 +1,19 @@\n-module.exports = {\r\n-    // other Jest configuration options...\r\n-    coverageReporters: ['json', 'lcov', 'text', 'html'],\r\n-    coverageDirectory: '<rootDir>/coverage',\r\n-    reporters: [\r\n-      'default',\r\n-      [\r\n-        'istanbul',\r\n-        {\r\n-          reports: ['lcov', 'text-summary'],\r\n-        },\r\n-      ],\r\n-    ],\r\n-    collectCoverageFrom: [\r\n-      'src/**/*.{js,jsx}',\r\n-      '!src/index.{js,jsx}',\r\n-      '!**/node_modules/**',\r\n-    ],\r\n-  };\r\n-  \n\\ No newline at end of file\n+\n+/*\n+ * For a detailed explanation regarding each configuration property, visit:\n+ * https://jestjs.io/docs/configuration\n+ */\n+module.exports = {\n+  \"testMatch\": [\n+    \"**/*.steps.js\"\n+  ],\n+  \n+  reporters: [\n+    'default',\n+    'cucumber-jest-json-reporter' // Add this line\n+  ],\n+  setupFilesAfterEnv: ['expect-puppeteer'],\n+ \n+};\n+\n+\n"
                },
                {
                    "date": 1686324330227,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,17 +3,13 @@\n  * For a detailed explanation regarding each configuration property, visit:\n  * https://jestjs.io/docs/configuration\n  */\n module.exports = {\n-  \"testMatch\": [\n-    \"**/*.steps.js\"\n-  ],\n-  \n+\n   reporters: [\n     'default',\n     'cucumber-jest-json-reporter' // Add this line\n   ],\n-  setupFilesAfterEnv: ['expect-puppeteer'],\n  \n };\n \n \n"
                },
                {
                    "date": 1686324342012,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,12 +4,9 @@\n  * https://jestjs.io/docs/configuration\n  */\n module.exports = {\n \n-  reporters: [\n-    'default',\n-    'cucumber-jest-json-reporter' // Add this line\n-  ],\n+\n  \n };\n \n \n"
                }
            ],
            "date": 1686323165032,
            "name": "Commit-0",
            "content": "module.exports = {\r\n    // ... other Jest configuration options ...\r\n    reporters: [\r\n      \"default\",\r\n      [\"./node_modules/jest-html-reporters\", {\r\n        pageTitle: \"Test Report\"\r\n      }]\r\n    ]\r\n  };"
        }
    ]
}